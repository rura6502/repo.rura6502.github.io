/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package io.iochord.dev;

import java.io.InputStream;
import java.net.Socket;
import java.util.Date;fron
import java.util.concurrent.TimeUnit;

public class App {
  
  private static long cost = 0;
  private static double total = 0;
  private static long start = System.currentTimeMillis();

  public static void main(String[] args) throws Exception {
    // Socket socket = new Socket("localhost", 6666);
    // Socket socket = new Socket("192.168.1.4", 50000);
    Socket socket = new Socket("192.168.11.40", 50000);
    InputStream input = socket.getInputStream();

    new Thread(() -> {
      long interval = 3_000l;
      try {
        TimeUnit.MILLISECONDS.sleep(interval);
      } catch (InterruptedException e1) {
        e1.printStackTrace();
      }
      while (true) {
        cost = System.currentTimeMillis() - start;
        String _total = String.format("%,.2f", total / 1000f / 1000f);
        String _speed = String.format("%,.9f", total / cost / 1000f);
        String _cost = String.format("%,.9f", cost / 1000f);
        System.out.println(new Date() + " -- total: " + _total + " Mbytes" +
                                                                ", cost: " + _cost + " s" +
                                                                ", speed: " + _speed + " MB/s");
        total = 0;
        start = System.currentTimeMillis();
        try { 
          TimeUnit.MILLISECONDS.sleep(interval);
        } catch (InterruptedException e) {
          e.printStackTrace();
        }
      }
    }).start();
    byte[] bytes = new byte[32 * 1024000]; // 32_000K
    while (true) {
      int read = input.read(bytes);
      if (read < 0)
        break;
      total += read;
    }
  }
}
