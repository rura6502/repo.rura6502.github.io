/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package io.github.rura6502;

import java.time.LocalDateTime;

import io.netty.bootstrap.Bootstrap;
import io.netty.buffer.Unpooled;
import io.netty.channel.Channel;
import io.netty.channel.ChannelHandlerContext;
import io.netty.channel.EventLoopGroup;
import io.netty.channel.SimpleChannelInboundHandler;
import io.netty.channel.nio.NioEventLoopGroup;
import io.netty.channel.socket.DatagramPacket;
import io.netty.channel.socket.nio.NioDatagramChannel;
import io.netty.util.CharsetUtil;
import io.netty.util.internal.SocketUtils;

public class App {

  public static void main(String[] args) {
    EventLoopGroup group = new NioEventLoopGroup();
    try {
      Bootstrap b = new Bootstrap();
      b.group(group).channel(NioDatagramChannel.class)
                                  .handler(new CustomHandler());
      Channel ch = b.bind(0).sync().channel();

      while (true) {
        String now = LocalDateTime.now().toString();



        ch.writeAndFlush(new DatagramPacket(
                                    Unpooled.copiedBuffer(now
                                                                          , CharsetUtil.UTF_8)
                                    , SocketUtils.socketAddress("localhost", 9999))).sync();
        System.out.println("Send data : " + now);
        Thread.sleep(2000);
      }
      
    } catch (Exception e) {
      e.printStackTrace();
    }
  }
}



class CustomHandler extends SimpleChannelInboundHandler<DatagramPacket> {

  @Override
  protected void channelRead0(ChannelHandlerContext ctx, DatagramPacket msg) throws Exception {

    System.out.print("from : " + msg.sender().getAddress());
    System.out.println(" data : " + msg.content().toString());
  }

}